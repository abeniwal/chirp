import Head from "next/head";
import { SignedOut, SignedIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs"
import Image from "next/image";

import { RouterOutputs, api } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return <div className="flex gap-3 w-full">
    <Image src={user.imageUrl} alt="Proile image" className="w-14 h-14 rounded-full" width={56} height={56} />
    <input placeholder="Type some emojis!" className="bg-transparent grow outline-none" />
  </div>;
};

type PostWithUser = RouterOutputs["post"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const {post, author} = props;
  return (
    <div className="flex p-4 gap-3 border-b border-slate-400" key={post.id}>  
      <Image src={author.imageUrl} className="w-14 h-14 rounded-full" alt={`@${author.username}'s profile image`} width={56} height={56} />
      <div className="flex flex-col">
        <div className="flex text-slate-300 gap-1">
          <span>{`@${author.username}`}</span>
          <span className="font-thin">{`Â· ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

export default function Home() {
  const { data, isLoading } = api.post.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>Something went wrong.</div>;
  
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full md:max-w-2xl border-x border-slate-400 h-full">
          <div className="border-b border-slate-400 p-4 flex">
            <SignedOut>
              <div className="flex justify-center"><SignInButton /></div>
            </SignedOut>
            <SignedIn>
              <CreatePostWizard />
            </SignedIn>
          </div>

          <div className="flex flex-col">
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id}/>
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
